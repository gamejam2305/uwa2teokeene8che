name: build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      docker:
        image: docker:dind
        options: --privileged
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Ruby dependencies
        run: |
          cd src
          bundle install
          
      - name: Install Node.js dependencies
        run: |
          cd src/passenger-status-node
          npm install
          
      - name: Run syntax checks
        run: |
          # Check Ruby syntax
          cd src
          ruby -c prometheus_exporter.rb
          cd ../test
          find tests -name "*.rb" -exec ruby -c {} \;
          
          # Check Node.js syntax
          cd ../src/passenger-status-node
          node -c index.js
          
      - name: Run unit tests (without Docker)
        run: |
          cd src
          bundle exec ruby -e "
            require_relative 'prometheus_exporter'
            app = PrometheusExporterApp.new
            puts 'Application loads successfully'
            puts 'SELF_GROUP_NAME: ' + PrometheusExporterApp::SELF_GROUP_NAME.inspect
            puts 'COMMON_LABELS: ' + PrometheusExporterApp::COMMON_LABELS.inspect
            puts 'Unit tests passed!'
          "
          
      - name: Build Docker images
        run: |
          cd test
          make build
          
      - name: Run integration tests
        run: |
          cd test
          make test
          
      - name: Cleanup
        if: always()
        run: |
          cd test
          make clean

  test-without-docker:
    runs-on: ubuntu-latest
    if: failure() # Run only if Docker tests fail
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: false
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Ruby dependencies
        run: |
          cd src
          bundle install
          
      - name: Install test dependencies
        run: |
          cd test
          bundle install
          
      - name: Install Node.js dependencies
        run: |
          cd src/passenger-status-node
          npm install
          
      - name: Run comprehensive tests without Docker
        run: |
          cd test
          make syntax-check
          make unit-test
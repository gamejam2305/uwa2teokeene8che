# Nginx configuration for JRuby application with Passenger

server {
    listen 80;
    listen [::]:80;
    server_name _;
    root /home/app/webapp/public;
    
    # Passenger configuration
    passenger_enabled on;
    passenger_app_env production;
    passenger_ruby /usr/local/bin/jruby;
    
    # JRuby + Passenger performance tuning
    passenger_min_instances $PASSENGER_MIN_INSTANCES;
    passenger_max_instances $PASSENGER_MAX_INSTANCES;
    passenger_concurrency_model $PASSENGER_CONCURRENCY_MODEL;
    passenger_thread_count $PASSENGER_THREAD_COUNT;
    
    # JRuby application startup settings
    passenger_startup_file config.ru;
    passenger_app_root /home/app/webapp;
    
    # Logging
    access_log /var/log/nginx/webapp_access.log;
    error_log /var/log/nginx/webapp_error.log info;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;
    
    # Health check endpoint (bypass app for faster response)
    location = /nginx-health {
        access_log off;
        return 200 "Nginx OK\n";
        add_header Content-Type text/plain;
    }
    
    # Application health check
    location = /health {
        # Let the app handle this
        passenger_enabled on;
    }
    
    # Metrics endpoint
    location = /metrics {
        passenger_enabled on;
        # Optional: restrict access to metrics
        # allow 127.0.0.1;
        # allow 10.0.0.0/8;
        # deny all;
    }
    
    # WebSocket support (if using faye-websocket)
    location /ws {
        passenger_enabled on;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Static files (if any)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri @passenger;
    }
    
    # Default location - let Passenger handle everything else
    location / {
        passenger_enabled on;
    }
    
    # Fallback to Passenger for missing static files
    location @passenger {
        passenger_enabled on;
    }
    
    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}